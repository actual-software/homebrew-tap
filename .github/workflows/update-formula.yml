name: Update Homebrew Formula

on:
  repository_dispatch:
    types: [new-release]

jobs:
  update-formula:
    name: Update Formula
    runs-on: macos-latest  # Use macOS for Homebrew testing
    steps:
      - name: Checkout tap repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract release information
        id: release_info
        run: |
          VERSION="${{ github.event.client_payload.version }}"
          INTEL_SHA="${{ github.event.client_payload.intel_sha }}"
          ARM_SHA="${{ github.event.client_payload.arm_sha }}"
          RELEASE_URL="${{ github.event.client_payload.release_url }}"
          
          echo "Version: $VERSION"
          echo "Intel SHA256: $INTEL_SHA"
          echo "ARM SHA256: $ARM_SHA"
          echo "Release URL: $RELEASE_URL"
          
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "intel_sha=$INTEL_SHA" >> $GITHUB_OUTPUT
          echo "arm_sha=$ARM_SHA" >> $GITHUB_OUTPUT

      - name: Update formula
        run: |
          VERSION="${{ steps.release_info.outputs.version }}"
          INTEL_SHA="${{ steps.release_info.outputs.intel_sha }}"
          ARM_SHA="${{ steps.release_info.outputs.arm_sha }}"
          
          echo "Updating formula to version $VERSION..."
          
          # Update version
          sed -i '' "s/version \".*\"/version \"$VERSION\"/" Formula/rulectl.rb
          
          # Update SHA256 hashes
          sed -i '' "s/sha256 \"INTEL_SHA256_PLACEHOLDER\"/sha256 \"$INTEL_SHA\"/" Formula/rulectl.rb
          sed -i '' "s/sha256 \"ARM_SHA256_PLACEHOLDER\"/sha256 \"$ARM_SHA\"/" Formula/rulectl.rb
          
          # Also update any existing SHA256 values (for updates)
          sed -i '' "s/sha256 \"[a-f0-9]\{64\}\" # intel/sha256 \"$INTEL_SHA\" # intel/" Formula/rulectl.rb
          sed -i '' "s/sha256 \"[a-f0-9]\{64\}\" # arm/sha256 \"$ARM_SHA\" # arm/" Formula/rulectl.rb
          
          echo "Formula updated!"
          cat Formula/rulectl.rb

      - name: Install Homebrew
        run: |
          if ! command -v brew &> /dev/null; then
            echo "Installing Homebrew..."
            /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
            echo 'eval "$(/opt/homebrew/bin/brew shellenv)"' >> ~/.zprofile
            eval "$(/opt/homebrew/bin/brew shellenv)"
          fi

      - name: Test formula
        run: |
          echo "Testing formula..."
          
          # Add current tap directory to Homebrew
          brew tap-new actual-software/test
          cp Formula/rulectl.rb $(brew --repository)/Library/Taps/actual-software/homebrew-test/Formula/
          
          # Test formula syntax
          brew audit --strict --online actual-software/test/rulectl
          
          # Test installation
          brew install --build-from-source actual-software/test/rulectl
          
          # Test the installed binary
          rulectl --help
          
          # Test formula's test block
          brew test actual-software/test/rulectl
          
          # Clean up
          brew uninstall actual-software/test/rulectl
          brew untap actual-software/test
          
          echo "✅ Formula tests passed!"

      - name: Commit and push changes
        run: |
          VERSION="${{ steps.release_info.outputs.version }}"
          
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          git add Formula/rulectl.rb
          
          if git diff --cached --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Update rulectl to v$VERSION

- Updated to version $VERSION
- Updated SHA256 hashes for both Intel and ARM builds
- Triggered by release: ${{ github.event.client_payload.release_url }}

Auto-generated by GitHub Actions"
            
            git push
            echo "✅ Formula updated and pushed!"
          fi

      - name: Create release notes
        run: |
          VERSION="${{ steps.release_info.outputs.version }}"
          
          echo "🍺 Homebrew formula updated to v$VERSION!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Users can now install this version with:" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`bash" >> $GITHUB_STEP_SUMMARY
          echo "brew tap actual-software/tap" >> $GITHUB_STEP_SUMMARY
          echo "brew install rulectl" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Or upgrade existing installations:" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`bash" >> $GITHUB_STEP_SUMMARY
          echo "brew upgrade rulectl" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY