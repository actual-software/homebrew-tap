name: Trigger Homebrew Update from Rulectl Release

# This workflow is triggered from the main rulectl repository
# when a new release is published

on:
  repository_dispatch:
    types: [update-homebrew-formula]

jobs:
  update-formula:
    name: Update Homebrew Formula
    runs-on: macos-latest
    steps:
      - name: Checkout tap repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Download and hash binaries
        id: hash_binaries
        run: |
          VERSION="${{ github.event.client_payload.version }}"
          echo "Processing version: $VERSION"
          
          # Download binaries
          curl -L -o "rulectl-darwin-x86_64-v${VERSION}" \
            "https://github.com/actual-software/rulectl/releases/download/v${VERSION}/rulectl-darwin-x86_64-v${VERSION}"
          
          curl -L -o "rulectl-darwin-aarch64-v${VERSION}" \
            "https://github.com/actual-software/rulectl/releases/download/v${VERSION}/rulectl-darwin-aarch64-v${VERSION}"
          
          # Calculate SHA256 hashes
          INTEL_SHA=$(shasum -a 256 "rulectl-darwin-x86_64-v${VERSION}" | cut -d' ' -f1)
          ARM_SHA=$(shasum -a 256 "rulectl-darwin-aarch64-v${VERSION}" | cut -d' ' -f1)
          
          echo "Intel SHA256: $INTEL_SHA"
          echo "ARM SHA256: $ARM_SHA"
          
          echo "intel_sha=$INTEL_SHA" >> $GITHUB_OUTPUT
          echo "arm_sha=$ARM_SHA" >> $GITHUB_OUTPUT
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Update formula
        run: |
          VERSION="${{ steps.hash_binaries.outputs.version }}"
          INTEL_SHA="${{ steps.hash_binaries.outputs.intel_sha }}"
          ARM_SHA="${{ steps.hash_binaries.outputs.arm_sha }}"
          
          echo "Updating formula to version $VERSION..."
          
          # Update version
          sed -i '' "s/version \".*\"/version \"$VERSION\"/" Formula/rulectl.rb
          
          # Update SHA256 hashes - handle both placeholder and existing hash patterns
          sed -i '' "s/sha256 \"[a-f0-9]*\".*# This will be auto-updated$/sha256 \"$INTEL_SHA\"  # This will be auto-updated/" Formula/rulectl.rb
          sed -i '' "s/sha256 \"[a-f0-9]*\".*# This will be auto-updated$/sha256 \"$ARM_SHA\"    # This will be auto-updated/" Formula/rulectl.rb
          
          echo "Formula updated!"

      - name: Test formula
        run: |
          # Install formula locally to test
          brew install --build-from-source ./Formula/rulectl.rb
          
          # Test that it works
          rulectl --help
          
          # Run formula's test block
          brew test rulectl
          
          # Clean up
          brew uninstall rulectl
          
          echo "âœ… Formula tests passed!"

      - name: Commit and push changes
        run: |
          VERSION="${{ steps.hash_binaries.outputs.version }}"
          
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          git add Formula/rulectl.rb
          
          if git diff --cached --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Update rulectl to v$VERSION

- Updated to version $VERSION
- Updated SHA256 hashes for both Intel and ARM builds

ðŸ¤– Auto-generated by GitHub Actions"
            
            git push
            echo "âœ… Formula updated and pushed!"
          fi